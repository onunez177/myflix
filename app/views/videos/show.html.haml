%article.video
  .container
    .row
      .video_large_cover.span7.offset1
        =videojs_rails sources: { mp4: @video.video_url }, width: "665", height: "375", poster: @video.poster_url
      .video_info.span3
        %header
          %h3= @video.name
          =@video.rating
        .description 
          %p= @video.description  
        .actions
          -if in_queue? # this conditional needs refactoring
            =link_to "Already in Queue", my_queue_path, class: "btn btn-success", id: "in_queue"  
          -else
            =link_to "Add to My Queue", queued_videos_path(video_id: @video), :method => :post, class: "btn", id: "add_queue", remote: true # 
            .hide
              =link_to "Already in Queue", my_queue_path, class: "btn btn-success", id: "in_queue" # this needs to be DRY'ed             

%section.reviews.container
  .row
    .span10.offset1
      - unless user_reviewed? 
        = bootstrap_form_for [@video, Review.new] do |f| 
          %fieldset
            %label Rate this video
            = f.select :rating, options_for_video_ratings
            %label Write Review
            = f.text_area :body, rows: 6, class: "span6", id: "review"
          %fieldset.actions.clearfix
            %input(type="submit" value="Submit" class="btn" id="review_submit")
            
    .span10.offset1  
      -if @reviews.any?
        %header
          %h3 User Reviews (#{@reviews.count})
        %ul
          - @reviews.each do |review|
            %article.review
              %li.row
                .span2
                  %span Rating: #{review.rating} / 5
                  %p= link_to "by #{review.creator.full_name}", user_path(review.creator)
                  %p 
                    %em #{timestamp(review.created_at)}  
                .span8
                  %p= review.body